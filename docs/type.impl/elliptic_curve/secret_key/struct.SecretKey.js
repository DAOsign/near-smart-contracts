(function() {var type_impls = {
"k256":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SecretKey%3CC%3E\" class=\"impl\"><a href=\"#impl-SecretKey%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; SecretKey&lt;C&gt;<div class=\"where\">where\n    C: Curve,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>(rng: &amp;mut impl <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.CryptoRngCore.html\" title=\"trait rand_core::CryptoRngCore\">CryptoRngCore</a>) -&gt; SecretKey&lt;C&gt;<div class=\"where\">where\n    C: CurveArithmetic,</div></h4></section></summary><div class=\"docblock\"><p>Generate a random [<code>SecretKey</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>(scalar: ScalarPrimitive&lt;C&gt;) -&gt; SecretKey&lt;C&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new secret key from a scalar value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_scalar_primitive\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_scalar_primitive</a>(&amp;self) -&gt; &amp;ScalarPrimitive&lt;C&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow the inner secret [<code>ScalarPrimitive</code>] value.</p>\n<h5 id=\"-warning\"><a class=\"doc-anchor\" href=\"#-warning\">§</a>⚠️ Warning</h5>\n<p>This value is key material.</p>\n<p>Please treat it with the care it deserves!</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_nonzero_scalar\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_nonzero_scalar</a>(&amp;self) -&gt; NonZeroScalar&lt;C&gt;<div class=\"where\">where\n    C: CurveArithmetic,</div></h4></section></summary><div class=\"docblock\"><p>Get the secret [<code>NonZeroScalar</code>] value for this key.</p>\n<h5 id=\"-warning-1\"><a class=\"doc-anchor\" href=\"#-warning-1\">§</a>⚠️ Warning</h5>\n<p>This value is key material.</p>\n<p>Please treat it with the care it deserves!</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.public_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">public_key</a>(&amp;self) -&gt; PublicKey&lt;C&gt;<div class=\"where\">where\n    C: CurveArithmetic,</div></h4></section></summary><div class=\"docblock\"><p>Get the [<code>PublicKey</code>] which corresponds to this secret key</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_bytes</a>(\n    bytes: &amp;GenericArray&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u8.html\">u8</a>, &lt;C as Curve&gt;::FieldBytesSize&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;SecretKey&lt;C&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Deserialize secret key from an encoded secret scalar.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(slice: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;SecretKey&lt;C&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Deserialize secret key from an encoded secret scalar passed as a byte slice.</p>\n<p>The slice is expected to be a minimum of 24-bytes (192-byts) and at most <code>C::FieldBytesSize</code>\nbytes in length.</p>\n<p>Byte slices shorter than the field size are handled by zero padding the input.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_bytes</a>(&amp;self) -&gt; GenericArray&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u8.html\">u8</a>, &lt;C as Curve&gt;::FieldBytesSize&gt;</h4></section></summary><div class=\"docblock\"><p>Serialize raw secret scalar as a big endian integer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_sec1_der\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_sec1_der</a>(der_bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;SecretKey&lt;C&gt;, Error&gt;<div class=\"where\">where\n    C: Curve + ValidatePublicKey,\n    &lt;C as Curve&gt;::FieldBytesSize: ModulusSize,</div></h4></section></summary><div class=\"docblock\"><p>Deserialize secret key encoded in the SEC1 ASN.1 DER <code>ECPrivateKey</code> format.</p>\n</div></details></div></details>",0,"k256::SecretKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CEcPrivateKey%3C'_%3E%3E-for-SecretKey%3CC%3E\" class=\"impl\"><a href=\"#impl-TryFrom%3CEcPrivateKey%3C'_%3E%3E-for-SecretKey%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;EcPrivateKey&lt;'_&gt;&gt; for SecretKey&lt;C&gt;<div class=\"where\">where\n    C: Curve + ValidatePublicKey,\n    &lt;C as Curve&gt;::FieldBytesSize: ModulusSize,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(sec1_private_key: EcPrivateKey&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;SecretKey&lt;C&gt;, Error&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<EcPrivateKey<'_>>","k256::SecretKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-SecretKey%3CC%3E\" class=\"impl\"><a href=\"#impl-Clone-for-SecretKey%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for SecretKey&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + Curve,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; SecretKey&lt;C&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.2/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","k256::SecretKey"],["<section id=\"impl-Eq-for-SecretKey%3CC%3E\" class=\"impl\"><a href=\"#impl-Eq-for-SecretKey%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for SecretKey&lt;C&gt;<div class=\"where\">where\n    C: Curve,</div></h3></section>","Eq","k256::SecretKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-SecretKey%3CC%3E\" class=\"impl\"><a href=\"#impl-Debug-for-SecretKey%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for SecretKey&lt;C&gt;<div class=\"where\">where\n    C: Curve,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","k256::SecretKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstantTimeEq-for-SecretKey%3CC%3E\" class=\"impl\"><a href=\"#impl-ConstantTimeEq-for-SecretKey%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://docs.rs/subtle/2.5.0/subtle/trait.ConstantTimeEq.html\" title=\"trait subtle::ConstantTimeEq\">ConstantTimeEq</a> for SecretKey&lt;C&gt;<div class=\"where\">where\n    C: Curve,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ct_eq\" class=\"method trait-impl\"><a href=\"#method.ct_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/subtle/2.5.0/subtle/trait.ConstantTimeEq.html#tymethod.ct_eq\" class=\"fn\">ct_eq</a>(&amp;self, other: &amp;SecretKey&lt;C&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a></h4></section></summary><div class='docblock'>Determine if two items are equal. <a href=\"https://docs.rs/subtle/2.5.0/subtle/trait.ConstantTimeEq.html#tymethod.ct_eq\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ct_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.5.0/src/subtle/lib.rs.html#294\">source</a><a href=\"#method.ct_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/subtle/2.5.0/subtle/trait.ConstantTimeEq.html#method.ct_ne\" class=\"fn\">ct_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a></h4></section></summary><div class='docblock'>Determine if two items are NOT equal. <a href=\"https://docs.rs/subtle/2.5.0/subtle/trait.ConstantTimeEq.html#method.ct_ne\">Read more</a></div></details></div></details>","ConstantTimeEq","k256::SecretKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-SecretKey%3CC%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-SecretKey%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for SecretKey&lt;C&gt;<div class=\"where\">where\n    C: Curve,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;SecretKey&lt;C&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.2/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","k256::SecretKey"],["<section id=\"impl-ZeroizeOnDrop-for-SecretKey%3CC%3E\" class=\"impl\"><a href=\"#impl-ZeroizeOnDrop-for-SecretKey%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; ZeroizeOnDrop for SecretKey&lt;C&gt;<div class=\"where\">where\n    C: Curve,</div></h3></section>","ZeroizeOnDrop","k256::SecretKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-SecretKey%3CC%3E\" class=\"impl\"><a href=\"#impl-Drop-for-SecretKey%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for SecretKey&lt;C&gt;<div class=\"where\">where\n    C: Curve,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","k256::SecretKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26NonZeroScalar%3CC%3E%3E-for-SecretKey%3CC%3E\" class=\"impl\"><a href=\"#impl-From%3C%26NonZeroScalar%3CC%3E%3E-for-SecretKey%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;NonZeroScalar&lt;C&gt;&gt; for SecretKey&lt;C&gt;<div class=\"where\">where\n    C: CurveArithmetic,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(scalar: &amp;NonZeroScalar&lt;C&gt;) -&gt; SecretKey&lt;C&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&NonZeroScalar<C>>","k256::SecretKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZeroScalar%3CC%3E%3E-for-SecretKey%3CC%3E\" class=\"impl\"><a href=\"#impl-From%3CNonZeroScalar%3CC%3E%3E-for-SecretKey%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;NonZeroScalar&lt;C&gt;&gt; for SecretKey&lt;C&gt;<div class=\"where\">where\n    C: CurveArithmetic,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(scalar: NonZeroScalar&lt;C&gt;) -&gt; SecretKey&lt;C&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<NonZeroScalar<C>>","k256::SecretKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSigningKey%3CC%3E%3E-for-SecretKey%3CC%3E\" class=\"impl\"><a href=\"#impl-From%3CSigningKey%3CC%3E%3E-for-SecretKey%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SigningKey&lt;C&gt;&gt; for SecretKey&lt;C&gt;<div class=\"where\">where\n    C: PrimeCurve + CurveArithmetic,\n    &lt;C as CurveArithmetic&gt;::Scalar: Invert&lt;Output = <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;&lt;C as CurveArithmetic&gt;::Scalar&gt;&gt; + <a class=\"trait\" href=\"k256/ecdsa/hazmat/trait.SignPrimitive.html\" title=\"trait k256::ecdsa::hazmat::SignPrimitive\">SignPrimitive</a>&lt;C&gt;,\n    &lt;&lt;C as Curve&gt;::FieldBytesSize as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>: ArrayLength&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u8.html\">u8</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(key: SigningKey&lt;C&gt;) -&gt; SecretKey&lt;C&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SigningKey<C>>","k256::SecretKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26SigningKey%3CC%3E%3E-for-SecretKey%3CC%3E\" class=\"impl\"><a href=\"#impl-From%3C%26SigningKey%3CC%3E%3E-for-SecretKey%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;SigningKey&lt;C&gt;&gt; for SecretKey&lt;C&gt;<div class=\"where\">where\n    C: PrimeCurve + CurveArithmetic,\n    &lt;C as CurveArithmetic&gt;::Scalar: Invert&lt;Output = <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;&lt;C as CurveArithmetic&gt;::Scalar&gt;&gt; + <a class=\"trait\" href=\"k256/ecdsa/hazmat/trait.SignPrimitive.html\" title=\"trait k256::ecdsa::hazmat::SignPrimitive\">SignPrimitive</a>&lt;C&gt;,\n    &lt;&lt;C as Curve&gt;::FieldBytesSize as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>: ArrayLength&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u8.html\">u8</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(secret_key: &amp;SigningKey&lt;C&gt;) -&gt; SecretKey&lt;C&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&SigningKey<C>>","k256::SecretKey"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()